{"name":"linter-eslint","main":"./src/main.js","version":"8.2.1","description":"Lint JavaScript on the fly, using ESLint","repository":{"type":"git","url":"git+https://github.com/AtomLinter/linter-eslint.git"},"license":"MIT","engines":{"atom":">=1.13.0 <2.0.0"},"configSchema":{"lintHtmlFiles":{"title":"Lint HTML Files","description":"You should also add `eslint-plugin-html` to your .eslintrc plugins","type":"boolean","default":false},"useGlobalEslint":{"title":"Use global ESLint installation","description":"Make sure you have it in your $PATH","type":"boolean","default":false},"showRuleIdInMessage":{"title":"Show Rule ID in Messages","type":"boolean","default":true},"disableWhenNoEslintConfig":{"title":"Disable when no ESLint config is found (in package.json or .eslintrc)","type":"boolean","default":true},"eslintrcPath":{"title":".eslintrc Path","description":"It will only be used when there's no config file in project","type":"string","default":""},"globalNodePath":{"title":"Global Node Installation Path","description":"Write the value of `npm get prefix` here","type":"string","default":""},"advancedLocalNodeModules":{"title":"Path to the local node_modules folder","description":"Optionally specify the path to the local node_modules folder","type":"string","default":""},"eslintRulesDir":{"title":"ESLint Rules Dir","description":"Specify a directory for ESLint to load rules from","type":"string","default":""},"disableEslintIgnore":{"title":"Don't use .eslintignore files","type":"boolean","default":false},"disableFSCache":{"title":"Disable FileSystem Cache","description":"Paths of node_modules, .eslintignore and others are cached","type":"boolean","default":false},"fixOnSave":{"title":"Fix errors on save","description":"Have eslint attempt to fix some errors automatically when saving the file.","type":"boolean","default":false},"scopes":{"title":"List of scopes to run ESLint on, run `Editor: Log Cursor Scope` to determine the scopes for a file.","type":"array","default":["source.js","source.jsx","source.js.jsx","source.babel","source.js-semantic"],"items":{"type":"string"}},"rulesToSilenceWhileTyping":{"title":"Silence specific rules while typing","description":"Useful when Atom fixes errors on save like `no-trailing-spaces` or `eol-last`.","type":"array","default":[],"items":{"type":"string"}},"rulesToDisableWhileFixing":{"title":"Disable specific rules from fixes","description":"Prevent rules from being auto-fixed by ESLint. Applies to fixes made during saves as well as when running the `Linter Eslint: Fix File` command.","type":"array","default":[],"items":{"type":"string"}}},"scripts":{"test":"apm test","lint":"eslint ."},"dependencies":{"atom-babel6-transpiler":"^1.1.1","atom-linter":"^10.0.0","atom-package-deps":"^4.6.0","babel-preset-node5":"^12.0.0","consistent-path":"^2.0.1","crypto-random-string":"^1.0.0","eslint":"^3.6.0","eslint-rule-documentation":"^1.0.0","resolve-env":"^1.0.0","user-home":"^2.0.0"},"devDependencies":{"eslint":"^3.17.0","eslint-config-airbnb-base":"^11.0.0","eslint-plugin-import":"^2.2.0","jasmine-fix":"^1.0.1","rimraf":"^2.5.4"},"package-deps":["linter:2.0.0"],"providedServices":{"linter":{"versions":{"2.0.0":"provideLinter"}}},"eslintConfig":{"rules":{"no-console":0,"semi":[2,"never"],"func-names":0,"no-param-reassign":[2,{"props":false}],"comma-dangle":0,"no-underscore-dangle":0,"global-require":0,"import/no-unresolved":[2,{"ignore":["atom"]}]},"extends":"airbnb-base","globals":{"atom":"true"},"env":{"node":true,"browser":true}},"atomTranspilers":[{"glob":"{src,spec}/*.js","transpiler":"atom-babel6-transpiler","options":{"babel":{"presets":["node5"],"sourceMaps":"inline","babelrc":false},"cacheKeyFiles":["package.json"]}}],"readme":"# linter-eslint\n\n[![Build Status](https://travis-ci.org/AtomLinter/linter-eslint.svg)](https://travis-ci.org/AtomLinter/linter-eslint)\n[![Dependency Status](https://david-dm.org/AtomLinter/linter-eslint.svg)](https://david-dm.org/AtomLinter/linter-eslint)\n\nThis linter plugin for [Linter](https://github.com/AtomLinter/Linter) provides\nan interface to [eslint](http://eslint.org). It will be used with files that\nhave the \"JavaScript\" syntax.\n\n## Installation\n\n```ShellSession\napm install linter-eslint\n```\n\n`linter-eslint` will look for a version of `eslint` local to your project and\nuse it if it's available. If none is found it will fall back to the version it\nships with.\n\nLets say you depend on a specific version of `eslint`, maybe it has unreleased\nfeatures, maybe it's just newer than what `linter-eslint` ships with. If\n`your-project/node_modules/eslint` exists `linter-eslint` will be used.\nThis package requires an `eslint` of at least v1.0.0.\n\nNote that if you do not have the `linter` package installed it will be\ninstalled\nfor you. If you are using an alternative `linter-*` consumer feel free\nto disable the `linter` package.\n\n## Use with plugins\n\nYou have two options:\n\n*   Install locally to your project `eslint` and the plugin\n\n    *   `$ npm i --save-dev eslint [eslint-plugins]`\n\n*   Install globally `eslint` and plugins\n\n    *   `$ npm i -g eslint [eslint-plugins]`\n    *   Activate `Use Global Eslint` package option\n    *   (Optional) Set `Global Node Path` with `$ npm config get prefix`\n\n## Using ESLint\n\nNote that recent versions of ESLint do not use any rules by-default. This\nmeans you have to specify a configuration file for your project!\n\nTo do this in a straightforward way run this:\n\n```ShellSession\neslint --init\n```\n\nAlternatively you can create the `.eslintrc` file by yourself. It is a good\nidea to have a look at the [Get Started With ESLint](http://devnull.guru/get-started-with-eslint/)\nblog post by [IanVS](https://github.com/IanVS) and [the ESLint documentation](http://eslint.org/docs/user-guide/configuring),\nincluding the [list of rules](http://eslint.org/docs/rules/).\n\n## A Note About Settings\n\nIf Use Global is on, Atom will use the global ESLint. The path to it is figured out by running `npm get prefix`. If this fails for any reason, you can set the global path manually in Global Node Installation Path.\n\nIf Use Global is off, Atom will try to find a local installation in the project folder, look if there's ESLint in `${PROJECT_ROOT}/node_modules` and use it if found.\n\nThe path to the local node_modules folder can be a path relative to the project or an absolute path and should end in /node_modules/. This path is used if the other methods of discovery have failed.\n\nIf there is no local installation Atom will use the built-in ESLint in the linter-eslint package itself.\n\n## Contributing\n\nSee the [contributing guidelines](./CONTRIBUTING.md) to get started\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/AtomLinter/linter-eslint/issues"},"homepage":"https://github.com/AtomLinter/linter-eslint#readme","_id":"linter-eslint@8.2.1","_shasum":"1d75e167bb65a79d6958d044f967c3bc61ef5a03","_resolved":"file:../d-117519-21090-g0jwf5.wtn4u9dx6r/package.tgz","_from":"../d-117519-21090-g0jwf5.wtn4u9dx6r/package.tgz"}